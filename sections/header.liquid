<div class="wrapper mx-auto text-gray-900 font-normal max-w-[1440px]">
  <a name="top"></a>
  <header
    class="h-auto full-width relative py-5 first-letter:lg:py-[26px]"
    x-data="{ open: false }"
    @keydown.escape="open = false">
    <div class="px-[12px] md:px-[36px] xl:px-0 mt-0 flex items-center justify-between mx-auto relative max-w-[1320px]">
      <a href="{{ routes.root_url }}" class="flex">
        {{ shop.name }}
      </a>
      <div class="flex lg:hidden">
        <button
          type="button"
          class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700"
          @click="open = ! open">
          <span class="sr-only">Open main menu</span>
          <svg
            class="h-6 w-6"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            aria-hidden="true">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
          </svg>
        </button>
      </div>
      {%- if section.settings.menu != blank -%}
        <nav class="z-50 absolute hidden top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 lg:block">
          <ul class="navbar flex flex-col justify-center gap-7 lg:flex-row">
            {%- for link in section.settings.menu.links -%}
              <li class="flex items-center group">
                <a href="{{ link.url }}" class="text-primary hover:text-green-900 font-bold menu-link lg:text-heading-6 mr-[7px] uppercase">
                  {{ link.title | escape }}
                </a>
              </li>
            {%- endfor -%}
          </ul>
        </nav>
      {%- endif -%}
      <div class="lg:flex lg:flex-1 lg:justify-end">
        <a href="#" class="inline-block">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="w-6 h-6">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M15.75 10.5V6a3.75 3.75 0 10-7.5 0v4.5m11.356-1.993l1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 01-1.12-1.243l1.264-12A1.125 1.125 0 015.513 7.5h12.974c.576 0 1.059.435 1.119 1.007zM8.625 10.5a.375.375 0 11-.75 0 .375.375 0 01.75 0zm7.5 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
          </svg>
        </a>
      </div>
    </div>
    <!-- Mobile menu -->
    <div
      role="dialog"
      aria-modal="true"
      x-show="open"
      x-cloak>
      <div focus="true" class="fixed z-10 overflow-y-auto bg-white px-6 py-6 lg:hidden">
        <div class="flex h-9 items-center justify-between">
          <div class="flex">
            <button
              type="button"
              class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700"
              @click="open = ! open"
              x-hidden="open">
              <span class="sr-only">Open main menu</span>
              <!-- Heroicon name: outline/bars-3 -->
              <svg
                class="h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                aria-hidden="true">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
              </svg>
            </button>
            <button
              type="button"
              class="-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700"
              @click="open = ! open"
              x-show="open">
              <span class="sr-only">Close menu</span>
              <svg
                class="h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                aria-hidden="true">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
          <div class="flex">
            <a href="#" class="inline-block">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-6 h-6">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M15.75 10.5V6a3.75 3.75 0 10-7.5 0v4.5m11.356-1.993l1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 01-1.12-1.243l1.264-12A1.125 1.125 0 015.513 7.5h12.974c.576 0 1.059.435 1.119 1.007zM8.625 10.5a.375.375 0 11-.75 0 .375.375 0 01.75 0zm7.5 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z" />
              </svg>
            </a>
          </div>
        </div>
      </div>
      {%- if section.settings.menu != blank -%}
        <nav
          class="fixed right-0 bg-white flex flex-col h-screen nav-shadow overflow-y-scroll nav-mobile transition-all duration-200 w-[380px] z-[100]"
          aria-modal="true"
          x-show="open">
          <div class="p-[30px]">
            <ul class="font-medium text-[16px] leading-[16px]">
              {%- for link in section.settings.menu.links -%}
                <li class="group menu-mobile-item py-[13px]">
                  <a href="{{ link.url }}" class="block transition-all duration-200 hover:text-green-900 hover:translate-x-1 uppercase">
                    {{ link.title | escape }}
                  </a>
                </li>
              {%- endfor -%}
            </ul>
          </div>
        </nav>
      {%- endif -%}
    </div>
  </header>
</{% if section.settings.enable_sticky_header %}sticky-header{% else %}div{% endif %}>

{%- if settings.cart_type == "notification" -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.getElementById('shopify-section-header');
      this.headerBounds = {};
      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}
</div>

{% schema %}
  {
    "name": "t:sections.header.name",
    "class": "section-header",
    "settings": [
      {
        "type": "select",
        "id": "color_scheme",
        "options": [
          {
            "value": "accent-1",
            "label": "t:sections.all.colors.accent_1.label"
          },
          {
            "value": "accent-2",
            "label": "t:sections.all.colors.accent_2.label"
          },
          {
            "value": "background-1",
            "label": "t:sections.all.colors.background_1.label"
          },
          {
            "value": "background-2",
            "label": "t:sections.all.colors.background_2.label"
          }, {
            "value": "inverse",
            "label": "t:sections.all.colors.inverse.label"
          }
        ],
        "default": "background-1",
        "label": "t:sections.all.colors.label"
      },
      {
        "type": "image_picker",
        "id": "logo",
        "label": "t:sections.header.settings.logo.label"
      },
      {
        "type": "range",
        "id": "logo_width",
        "min": 50,
        "max": 250,
        "step": 10,
        "default": 100,
        "unit": "t:sections.header.settings.logo_width.unit",
        "label": "t:sections.header.settings.logo_width.label"
      },
      {
        "type": "select",
        "id": "logo_position",
        "options": [
          {
            "value": "top-left",
            "label": "t:sections.header.settings.logo_position.options__2.label"
          }, {
            "value": "top-center",
            "label": "t:sections.header.settings.logo_position.options__3.label"
          }, {
            "value": "middle-left",
            "label": "t:sections.header.settings.logo_position.options__1.label"
          }, {
            "value": "middle-center",
            "label": "t:sections.header.settings.logo_position.options__4.label"
          }
        ],
        "default": "middle-left",
        "label": "t:sections.header.settings.logo_position.label"
      }, {
        "type": "link_list",
        "id": "menu",
        "default": "main-menu",
        "label": "t:sections.header.settings.menu.label"
      }, {
        "type": "select",
        "id": "menu_type_desktop",
        "options": [
          {
            "value": "dropdown",
            "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
          }, {
            "value": "mega",
            "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
          }
        ],
        "default": "dropdown",
        "label": "t:sections.header.settings.menu_type_desktop.label",
        "info": "t:sections.header.settings.menu_type_desktop.info"
      }, {
        "type": "checkbox",
        "id": "show_line_separator",
        "default": true,
        "label": "t:sections.header.settings.show_line_separator.label"
      }, {
        "type": "checkbox",
        "id": "enable_sticky_header",
        "default": true,
        "label": "t:sections.header.settings.enable_sticky_header.label",
        "info": "t:sections.header.settings.enable_sticky_header.info"
      }, {
        "type": "header",
        "content": "t:sections.header.settings.mobile_layout.content"
      }, {
        "type": "select",
        "id": "mobile_logo_position",
        "options": [
          {
            "value": "center",
            "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
          }, {
            "value": "left",
            "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
          }
        ],
        "default": "center",
        "label": "t:sections.header.settings.mobile_logo_position.label"
      }, {
        "type": "header",
        "content": "t:sections.all.spacing"
      }, {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.header.settings.margin_bottom.label",
        "default": 0
      }, {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      }, {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 36,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 20
      }, {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 36,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 20
      }
    ]
  }
{% endschema %}